{
  "name": "CloudFlare Page Rules + GitHub = Granular control",
  "tagline": "♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️♥️",
  "body": "## GitHub + CloudFlare Page Rules = Granular control\r\nPage Rules gives you the ability to control how CloudFlare works on a URL basis allowing you to customize CloudFlare's functionality to exactly match your application's needs.\r\n\r\nPage Rules can manage almost every setting on CloudFlare, as well as many of the most popular controls of HTACCESS within a user-friendly interface. You can see the full list of settings now available in Page Rules here.\r\n\r\nThe number of available Page Rules for a domain is set by plan type; additional rules can be purchased a la carte. Check out our plans page for more information.\r\n\r\n### About Page Rules\r\n\r\nCloudFlare is provisioned by DNS. That means that, from the beginning, you've been able to turn CloudFlare on or off on a subdomain level. From the CloudFlare DNS Manager, you can toggle the little clouds next to your subdomains orange (on) or gray (off) in order to control whether traffic for that subdomain will pass through CloudFlare's proxy.\r\n\r\nOften, however, users have wanted finer-grained control. For example, you may want to have a CloudFlare app like UserVoice added to your public-facing pages, but not appear on your private administrative areas of your website. Before today, that wasn't an option.\r\n\r\n### An Introduction\r\n\r\nPage Rules is a powerful new set of tools that allows you to control how CloudFlare works on your site on a page-by-page basis. The feature provides many of the most popular controls of HTACCESS with a user-friendly interface. Page Rules are now available for all users from the Settings menu next to each domain on the My Websites page. Over the next few days we'll be posting some tutorials on the CloudFlare Blog on various ways you can use Page Rules, but I wanted to start with the example above: how to turn a CloudFlare app like UserVoice off on the administrative portion of your website.\r\n\r\n### Pattern Matching\r\n\r\nPage Rules give you the ability to take various actions based on the page's URL, such as creating redirects, fine tuning caching behavior, or enabling and disabling our various services.\r\n\r\nA Page Rule will take effect on a given URL pattern, matching the following format:\r\n\r\n    <scheme>://<hostname><:port>/<path>\r\n\r\nAn example using each component would be:\r\n\r\n    https://www.example.com:80/image.png\r\n\r\nThe scheme and port components are both optional. If the scheme is omitted, it will cover both http:// and https:// protocols. If the port is not specified, then the rule will match all ports. You can perform basic wildcard matches by using a ‘*’ symbol in your rule pattern, allowing it to match a series of similar patterns rather than just one.\r\n\r\nThere are two important things to note with Page Rules:\r\n\r\n1) Only one Page Rule will take effect on any given request\r\n\r\n2) Page Rules are given priority in an order from top to bottom\r\n\r\nOnce a URL matches a rule, only that rule only will be applied - ie. if a Page Rule has already triggered on a request, any subsequent rules that also match the URL pattern will not take effect. As a general rule, we recommend ordering your rules from most specific to least specific.\r\n\r\nPage rules can be paused, in which case they will take no action but can still be seen in the list and edited. The Save as Draft option will create a page rule that is paused initially.\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}